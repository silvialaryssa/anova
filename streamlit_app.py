# anovapp.py - Aplicativo modularizado de an√°lise ANOVA

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import scipy.stats as stats
import statsmodels.api as sm
from statsmodels.stats.diagnostic import het_breuschpagan
from statsmodels.stats.multicomp import pairwise_tukeyhsd
import altair as alt


# ================================
# CONFIGURA√á√ïES INICIAIS
# ================================
st.set_page_config(page_title="An√°lise ANOVA - Ames Housing", layout="wide")
st.title("An√°lise Estat√≠stica com ANOVA - Ames Housing Dataset")

# ================================
# FUN√á√ïES UTILIT√ÅRIAS
# ================================
uploaded_file = 'src/AmesHousing.csv'  # Default file for demonstration
@st.cache_data
def carregar_dados(uploaded_file):
 return pd.read_csv(uploaded_file)

def exibir_colunas_descricao(df):
    descricoes = {        
        'Order': 'Identificador de ordem no dataset',
        'PID': 'Identificador √∫nico da propriedade',
        'MS_SubClass': 'Tipo de constru√ß√£o (c√≥digo)',
        'Neighborhood': 'Bairro onde a casa est√° localizada',
        'House_Style': 'Estilo da resid√™ncia',
        'Bsmt_Full_Bath': 'Banheiro completo no por√£o',
        'SalePrice': 'Pre√ßo final de venda da casa'
        # Adicione outras descri√ß√µes conforme necess√°rio}  # abreviado por brevidade
    }
    
    # Garante que os nomes das colunas estejam sem espa√ßos
    df.columns = df.columns.str.replace(' ', '_')
    

    # Cria DataFrame com colunas e descri√ß√µes
    st.subheader("Descri√ß√£o das Colunas")
    colunas_df = pd.DataFrame({
        "Coluna": df.columns,
        "Descri√ß√£o": [descricoes.get(col, "") for col in df.columns]
    })
    st.dataframe(colunas_df)

def qq_plot_medias(df, var_categ, var_target):
    medias = df.groupby(var_categ)[var_target].mean().dropna()
    fig = plt.figure(figsize=(4, 3))
    stats.probplot(medias, dist="norm", plot=plt)
    plt.title(f"Q-Q Plot das M√©dias de {var_target} por {var_categ}", fontsize=10)
    plt.xlabel("Quantis te√≥ricos", fontsize=8)
    plt.ylabel("Quantis amostrais", fontsize=8)
    plt.xticks(fontsize=7)
    plt.yticks(fontsize=7)
    plt.grid(True)
    plt.tight_layout()
    return fig

def avaliar_variavel(var, df_clean, var_target):
    st.subheader(f"Vari√°vel: {var}")
    grupos = [group[var_target].values for name, group in df_clean.groupby(var)]
    anova = stats.f_oneway(*grupos)
    st.write(f"p-valor da ANOVA: {anova.pvalue:.6f}")
    
        
    # Interpreta√ß√£o autom√°tica
    if anova.pvalue < 0.001:
        st.markdown("üî¨ **Conclus√£o**: Existe uma **diferen√ßa estatisticamente muito significativa** entre as m√©dias dos grupos.")
    elif anova.pvalue < 0.05:
        st.markdown("üî¨ **Conclus√£o**: Existe uma **diferen√ßa estatisticamente significativa** entre as m√©dias dos grupos.")
    else:
        st.markdown("üìä **Conclus√£o**: **N√£o h√° evid√™ncia estat√≠stica suficiente** para afirmar que as m√©dias dos grupos s√£o diferentes.")
        

    modelo = sm.OLS.from_formula(f'{var_target} ~ C({var})', data=df_clean).fit()
    residuos = modelo.resid
    shapiro = stats.shapiro(residuos)
    bp_test = het_breuschpagan(residuos, modelo.model.exog)

   # st.write(f"Shapiro-Wilk: {shapiro.pvalue:.4f}")
   # st.write(f"Breusch-Pagan: {bp_test[1]:.4f}")
    
        # Shapiro-Wilk (normalidade dos res√≠duos)
    p_shapiro = shapiro.pvalue
    st.write(f"Shapiro-Wilk (Normalidade dos res√≠duos): {p_shapiro:.4f}")
    if p_shapiro >= 0.05:
        st.success("‚úÖ Os res√≠duos seguem uma distribui√ß√£o normal (p ‚â• 0.05).")
    else:
        st.warning("‚ö†Ô∏è Os res√≠duos **n√£o seguem** uma distribui√ß√£o normal (p < 0.05).")

    # Breusch-Pagan (homocedasticidade dos res√≠duos)
    p_bp = bp_test[1]
    st.write(f"Breusch-Pagan (Homocedasticidade dos res√≠duos): {p_bp:.4f}")
    if p_bp >= 0.05:
        st.success("‚úÖ Vari√¢ncia constante dos res√≠duos (homocedasticidade verificada).")
    else:
        st.warning("‚ö†Ô∏è Os res√≠duos **n√£o t√™m vari√¢ncia constante** (heterocedasticidade detectada).")
    
    
    

    if shapiro.pvalue < 0.05 or bp_test[1] < 0.05:
        kruskal = stats.kruskal(*grupos)
        st.warning(f"Teste de Kruskal-Wallis: p = {kruskal.pvalue:.4f}")
    else:
        st.success("Pressupostos atendidos para ANOVA tradicional")

    try:
        tukey = pairwise_tukeyhsd(endog=df_clean[var_target], groups=df_clean[var], alpha=0.05)
        tukey_df = pd.DataFrame(tukey.summary().data[1:], columns=tukey.summary().data[0])
        st.dataframe(tukey_df)
    except Exception as e:
        st.warning(f"Erro no Tukey HSD: {e}")

# ================================
# ENTRADA DE DADOS
# ================================
#uploaded_file = st.file_uploader("üìÅ Envie o arquivo AmesHousing.csv", type=["csv"])
#if not uploaded_file:
#    st.stop()

df = carregar_dados(uploaded_file)
df.columns = df.columns.str.replace(' ', '_')
st.success("Arquivo carregado com sucesso!")
exibir_colunas_descricao(df)

# ================================
# DEFINI√á√ÉO DE VARI√ÅVEIS
# ================================
var_target = 'SalePrice'
var1 = 'Neighborhood'
var2 = 'House_Style'
var3 = 'Bsmt_Full_Bath'
df_clean = df[[var_target, var1, var2, var3]].dropna()

# ================================
# Q-Q Plots
# ================================
st.header("Q-Q Plot das M√©dias por Vari√°vel")
col1, col2, col3 = st.columns(3)
with col1:
    st.subheader(var1)
    st.pyplot(qq_plot_medias(df_clean, var1, var_target))
with col2:
    st.subheader(var2)
    st.pyplot(qq_plot_medias(df_clean, var2, var_target))
with col3:
    st.subheader(var3)
    st.pyplot(qq_plot_medias(df_clean, var3, var_target))

# ================================
# AN√ÅLISE EXPLORAT√ìRIA
# ================================
st.header("Boxplots para Visualiza√ß√£o das Vari√°veis")
for var in [var1, var2, var3]:
    chart_data = df_clean[[var, var_target]].dropna()
    chart = alt.Chart(chart_data).mark_boxplot(extent='min-max').encode(
        x=alt.X(f'{var}:N', title=var),
        y=alt.Y(f'{var_target}:Q', title='Pre√ßo de Venda'),
        color=alt.Color(f'{var}:N', legend=None)
    ).properties(width=700, height=400)
    st.altair_chart(chart, use_container_width=True)

# ================================
# AVALIA√á√ÉO DAS VARI√ÅVEIS
# ================================
st.header("Avalia√ß√£o Estat√≠stica das Vari√°veis")
for var in [var1, var2, var3]:
    avaliar_variavel(var, df_clean, var_target)

# ================================
# EXPORT√ÅVEL COMO M√ìDULO
# ================================
# Para usar como biblioteca:
# from anovapp import avaliar_variavel, qq_plot_medias
# e executar manualmente com df desejado

# ================================
# AVISO FINAL
# ================================
st.warning("Por favor, envie o dataset CSV para come√ßar a an√°lise.")


# ================================
# Interpreta√ß√£o do Resultado
# ================================
st.header("Interpreta√ß√£o dos Q-Q Plots das M√©dias por Vari√°vel")
st.markdown("""
**1. Neighborhood (Bairro)**  
**Interpreta√ß√£o**: Os pontos se afastam da linha reta em ambas as extremidades, o que indica desvio da normalidade (provavelmente caudas mais pesadas ou assimetria).  
**Conclus√£o**: A distribui√ß√£o das m√©dias de pre√ßo entre os bairros n√£o segue bem uma distribui√ß√£o normal, sugerindo que os bairros t√™m efeitos bem distintos no pre√ßo.

**2. House_Style (Estilo da Casa)**  
**Interpreta√ß√£o**: Os pontos est√£o razoavelmente pr√≥ximos da linha vermelha, com pequenas varia√ß√µes.  
**Conclus√£o**: A distribui√ß√£o das m√©dias de pre√ßo por estilo de casa √© aproximadamente normal. A ANOVA tradicional pode ser mais adequada aqui.

**3. Bsmt_Full_Bath (Banheiro Completo no Por√£o)**  
**Interpreta√ß√£o**: Apesar do n√∫mero pequeno de grupos, os pontos est√£o muito pr√≥ximos da linha reta, indicando forte ader√™ncia √† normalidade.  
**Conclus√£o**: A vari√°vel Bsmt_Full_Bath apresenta uma distribui√ß√£o de m√©dias normal ‚Äî √© uma vari√°vel promissora para an√°lise com testes param√©tricos como ANOVA.
""")


st.header("üìÑ Interpreta√ß√£o Manual dos Testes de Hip√≥teses")

with st.expander("üîç An√°lise Detalhada de Cada Vari√°vel"):
    st.markdown("""
### 1. Vari√°vel: `Neighborhood`
- **p-valor da ANOVA**: `0.000000`
- **Shapiro-Wilk (normalidade dos res√≠duos)**: `0.0000`
- **Breusch-Pagan (homocedasticidade)**: `0.0000`
- **Kruskal-Wallis**: `p = 0.0000`

**üß† Conclus√£o**:  
A ANOVA tradicional n√£o √© adequada, pois os res√≠duos **n√£o seguem distribui√ß√£o normal** (p < 0.05) e **n√£o apresentam homocedasticidade** (p < 0.05).  
Como alternativa, utilizamos o **teste de Kruskal-Wallis**, que **n√£o depende desses pressupostos**.  
üìå O resultado (**p = 0.0000**) indica que **existe diferen√ßa estatisticamente significativa entre os bairros** em rela√ß√£o ao pre√ßo de venda.

---

### 2. Vari√°vel: `House_Style`
- **p-valor da ANOVA**: `0.000000`
- **Shapiro-Wilk (normalidade dos res√≠duos)**: `0.0000`
- **Breusch-Pagan (homocedasticidade)**: `0.0000`
- **Kruskal-Wallis**: `p = 0.0000`

**üß† Conclus√£o**:  
A ANOVA tradicional n√£o √© apropriada, pois os res√≠duos **n√£o s√£o normais** e h√° **vari√¢ncias diferentes entre os grupos**.  
üìå O **teste Kruskal-Wallis** foi aplicado como alternativa robusta.  
O **p-valor significativo (p = 0.0000)** indica que o **estilo da casa influencia significativamente o pre√ßo de venda**.

---

### 3. Vari√°vel: `Bsmt_Full_Bath`
- **p-valor da ANOVA**: `0.000000`
- **Shapiro-Wilk (normalidade dos res√≠duos)**: `0.0000`
- **Breusch-Pagan (homocedasticidade)**: `0.0000`
- **Kruskal-Wallis**: `p = 0.0000`

**üß† Conclus√£o**:  
Novamente, os pressupostos da ANOVA foram violados.  
Como os res√≠duos **n√£o s√£o normais** e **n√£o h√° homogeneidade de vari√¢ncia**, utilizou-se o **teste de Kruskal-Wallis**, que **confirmou diferen√ßas estatisticamente significativas (p = 0.0000)** entre os grupos de n√∫mero de banheiros completos no por√£o.

---
### ‚úÖ Resumo Final
Para **todas as vari√°veis analisadas**, a ANOVA tradicional **n√£o foi adequada** devido √† viola√ß√£o dos pressupostos de **normalidade** e **homocedasticidade**.  
O **teste Kruskal-Wallis**, que √© mais **robusto** em cen√°rios como este, foi utilizado com sucesso e revelou **diferen√ßas significativas entre os grupos** em todas as vari√°veis.  
üîç Isso **indica que cada uma dessas vari√°veis influencia significativamente o pre√ßo de venda** das resid√™ncias.
""")
